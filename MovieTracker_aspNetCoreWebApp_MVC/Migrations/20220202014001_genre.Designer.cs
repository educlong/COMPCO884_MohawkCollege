// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTracker_aspNetCoreWebApp_MVC.Data;

namespace MovieTracker_aspNetCoreWebApp_MVC.Migrations
{
    [DbContext(typeof(MovieTracker_aspNetCoreWebApp_MVCContext))]
    [Migration("20220202014001_genre")]
    partial class genre
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieTracker_aspNetCoreWebApp_MVC.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreDescription")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreDescription = "Action"
                        },
                        new
                        {
                            Id = 2,
                            GenreDescription = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            GenreDescription = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            GenreDescription = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            GenreDescription = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            GenreDescription = "Crime"
                        },
                        new
                        {
                            Id = 7,
                            GenreDescription = "Documentary"
                        },
                        new
                        {
                            Id = 8,
                            GenreDescription = "Drama"
                        },
                        new
                        {
                            Id = 9,
                            GenreDescription = "Family"
                        },
                        new
                        {
                            Id = 10,
                            GenreDescription = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            GenreDescription = "Film Noir"
                        },
                        new
                        {
                            Id = 12,
                            GenreDescription = "History"
                        },
                        new
                        {
                            Id = 13,
                            GenreDescription = "Horror"
                        },
                        new
                        {
                            Id = 14,
                            GenreDescription = "Music"
                        },
                        new
                        {
                            Id = 15,
                            GenreDescription = "Musical"
                        },
                        new
                        {
                            Id = 16,
                            GenreDescription = "Mystery"
                        },
                        new
                        {
                            Id = 17,
                            GenreDescription = "Romance"
                        },
                        new
                        {
                            Id = 18,
                            GenreDescription = "Sci-Fi"
                        },
                        new
                        {
                            Id = 19,
                            GenreDescription = "Short Film"
                        },
                        new
                        {
                            Id = 20,
                            GenreDescription = "Sport"
                        },
                        new
                        {
                            Id = 21,
                            GenreDescription = "Superhero"
                        },
                        new
                        {
                            Id = 22,
                            GenreDescription = "Thriller"
                        },
                        new
                        {
                            Id = 23,
                            GenreDescription = "War"
                        },
                        new
                        {
                            Id = 24,
                            GenreDescription = "Western"
                        });
                });

            modelBuilder.Entity("MovieTracker_aspNetCoreWebApp_MVC.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSeen")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateSeen = new DateTime(2021, 10, 24, 20, 40, 0, 600, DateTimeKind.Local).AddTicks(8577),
                            GenreId = 18,
                            Rating = 6,
                            Title = "Interstella"
                        },
                        new
                        {
                            Id = 2,
                            DateSeen = new DateTime(2021, 12, 13, 20, 40, 0, 604, DateTimeKind.Local).AddTicks(4186),
                            Rating = 8,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 1,
                            Title = "The dark knight"
                        });
                });

            modelBuilder.Entity("MovieTracker_aspNetCoreWebApp_MVC.Models.Movie", b =>
                {
                    b.HasOne("MovieTracker_aspNetCoreWebApp_MVC.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MovieTracker_aspNetCoreWebApp_MVC.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
